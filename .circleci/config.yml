version: 2.1

##################################
##            Commands          ##
##################################
commands:
  deploy-to-cg:
    description: Deploy a cloud foundry app to cloud.gov
    parameters:
      manifest:
        type: string
        default: ./.cloudgov/manifest.yml
      action:
        type: enum
        enum: ["deploy", "restage"]
        default: "deploy"
      app:
        type: string
    steps:
      - run:
          name: Setup environment
          command: |
            if [ "$CIRCLE_BRANCH" = "main" ]; then
              echo "export CF_SPACE=production" >> $BASH_ENV
              echo "export CF_USERNAME=$CF_USERNAME_PRODUCTION" >> $BASH_ENV
              echo "export CF_PASSWORD=$CF_PASSWORD_PRODUCTION" >> $BASH_ENV
            fi
            if [ "$CIRCLE_BRANCH" = "staging" ]; then
              echo "export CF_SPACE=staging" >> $BASH_ENV
              echo "export CF_USERNAME=$CF_USERNAME_STAGING" >> $BASH_ENV
              echo "export CF_PASSWORD=$CF_PASSWORD_STAGING" >> $BASH_ENV
            fi

      - run:
          name: Install cloud foundry cli
          command: |
            curl -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | tar -zx
            sudo mv cf7 /usr/local/bin/cf
            cf version

      - run:
          name: Log into cloud.gov
          command: |
            cf api https://api.fr.cloud.gov
            cf login -u $CF_USERNAME -p $CF_PASSWORD -o gsa-18f-federalist -s $CF_SPACE

      - when:
          condition:
            equal: ["deploy", << parameters.action >> ]
          steps:
            - run:
                name: Deploy app '<< parameters.app >>'
                command: |
                  set +e

                  onerr() {
                    echo "Deployment failed, cancelling."
                    cf cancel-deployment << parameters.app >>
                    cf logout
                    exit 1
                  }
                  trap 'onerr' ERR

                  cf push << parameters.app >> \
                    --strategy rolling \
                    --vars-file "./.cloudgov/vars/${CF_SPACE}.yml" \
                    -f << parameters.manifest >>

      - when:
          condition:
            equal: ["restage", << parameters.action >> ]
          steps:
            - run:
                name: Restage app '<< parameters.app >>'
                command: |
                  cf restage << parameters.app >> --strategy rolling

      - run:
          name: Log out from cloud.gov
          command: cf logout


##################################
##             Jobs             ##
##################################
jobs:
  build:
    docker:
      - image: circleci/node:16.13.0
        environment:
          CC_TEST_REPORTER_ID: 4c0674ab7fa1efa186ac5998f89136640d924fabcc0b99ed764bd9fc85043b97
      - image: circleci/redis
        environment:
          REDIS_PORT: 6379
    steps:
      - checkout
      - run:
          name: Install codeclimate reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn --pure-lockfile
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
            - ~/.cache/yarn
      - run:
          name: Check lint
          command: yarn eslint
      - run:
          name: Test
          command: yarn test:cover
      - run:
          name: Report test coverage
          # Attempt to submit coverage. Use `|| true` to always succeed even if that submission fails.
          command: ./cc-test-reporter after-build --exit-code $? < coverage/lcov.info || true

  deploy:
    docker:
      - image: cimg/base:2020.01
    parameters:
      app:
        type: string
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}

      - deploy-to-cg:
          app: << parameters.app >>

  restage:
    docker:
      - image: cimg/base:2020.01
    parameters:
      app:
        type: string
    steps:
      - checkout

      - deploy-to-cg:
          app: << parameters.app >>
          action: restage


##################################
##          Workflows           ##
##################################
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build

      - deploy:
          requires:
            - build
          name: Deploy federalist-builder
          app: federalist-builder
          filters:
            branches:
              only: main

      - deploy:
          requires:
            - build
          name: Deploy federalist-builder-staging
          app: federalist-builder-staging
          filters:
            branches:
              only: staging

  nightly:
    triggers:
      - schedule:
          cron: "0 5 * * *"
          filters:
            branches:
              only:
                - main
                - staging
    jobs:
      - restage:
          name: Restage federalist-builder
          app: federalist-builder
          filters:
            branches:
              only: main

      - restage:
          name: Restage federalist-builder-staging
          app: federalist-builder-staging
          filters:
            branches:
              only: staging